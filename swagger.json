{
  "swagger": "2.0",
  "info": {
    "description": "BareFoot Nomad is application that Make company global travel and accommodation easy and convenient for the strong workforce of savvy members of staff, by leveraging the modern web.",
    "version": " ",
    "title": "BareFootNomad",
    "termsOfService": "https://github.com/Stackup-Rwanda/ateam-bn-backend/blob/develop/README.md",
    "contact": {
      "email": "the-a-team@gmail.com"
    }
  },
  "host": "ateam-bn-backend-staging.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "User",
      "description": " User endpoints :: This endpoint will handle user wrong request"
    },
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "none"
  ],
  "produces": [
    "application/json",
    "none"
  ],
  "paths": {
    "/users/jkhgftgftydcrdc": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Access wrong link",
        "description": "Now by the use of this GET endpoint user Should be redirected to the documentation of application",
        "responses": {
          "400": {
            "description": " Bad request : Hey !! are you looking for BareFoot Nomad,  If yes Use the link below it is documentation of application"
          }
        }
      }
    },
    "/auth/signup/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Signup with application",
        "description": "Now by the use of this POST endpoint user Should be able to create account with Barefoot Nomad application",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create user account: User credentials needed to be used for signup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User was created successfully"
          },
          "400": {
            "description": "Invalid credentials"
          },
          "409": {
            "description": "This user already exists, use another email or username"
          }
        }
      }
    },
    "/auth/signin/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Signin with application",
        "description": "Now by the use of this POST endpoint user Should be able to signin into his/her account with  Barefoot Nomad  application",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "signin into user account: Correct user credentials needed to be used for login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authorizeduser: successfully logged In"
          },
          "401": {
            "description": "Unauthorized: Please confirm your email before logging in! or Incorrect credentials"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "logout user from application",
        "description": "Now by the use of this GET endpoint user Should logout from application",
        "responses": {
          "200": {
            "description": " OK : Logout successfully"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "token",
            "description": " This is user token which must be deleted directly when logged out from application",
            "type": "string"
          }
        ]
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send Email to reset password",
        "description": "User can get an email to reset password, endpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User email to be used for resetting password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The email has been sent successfully."
          },
          "400": {
            "description": "email must be a valid email"
          },
          "404": {
            "description": "Sorry! This email does not exist in Barefoot system."
          }
        }
      }
    },
    "/auth/update-password/{userId}/{token}": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "description": "User can reset password, endpoint",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New password and confirmation password for a user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "type": "integer",
            "description": "parsing a user ID"
          },
          {
            "in": "path",
            "name": "token",
            "type": "string",
            "description": "parsing a user token"
          }
        ],
        "responses": {
          "200": {
            "description": "The password has been updated successfully."
          },
          "400": {
            "description": "password must be a valid email"
          },
          "401": {
            "description": "Sorry, the Token is invalide"
          },
          "404": {
            "description": "Sorry! The user does not exist."
          }
        }
      }
    },
    "/profile/{username}": {
      "get": {
        "description": "user can view his/her profile details",
        "summary": "View User's Profile",
        "tags": [
          "Profile"
        ],
        "operationId": "ViewProfile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "in": "path",
            "name": "username",
            "type": "string",
            "description": "parsing a username"
          }
        ],
        "responses": {
          "200": {
            "description": "profile details are provided",
            "headers": {}
          },
          "400": {
            "description": "token is malformed/invalid",
            "headers": {}
          },
          "401": {
            "description": "profile doesn't belong to user or user is not registered",
            "headers": {}
          }
        }
      },
      "patch": {
        "description": "User can update details of his/her profile",
        "summary": "Update User's Profile",
        "tags": [
          "Profile"
        ],
        "operationId": "UpdateProfile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "in": "path",
            "name": "username",
            "type": "string",
            "description": "parsing a username"
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "description": "profile photo"
          },
          {
            "in": "formData",
            "name": "cover",
            "type": "file",
            "description": "cover photo"
          },
          {
            "in": "formData",
            "required": true,
            "name": "name",
            "type": "string",
            "description": "name"
          },
          {
            "in": "formData",
            "required": true,
            "name": "birthdate",
            "type": "string"
          },
          {
            "in": "formData",
            "required": true,
            "name": "gender",
            "type": "string"
          },
          {
            "in": "formData",
            "required": true,
            "name": "preferredLanguage",
            "type": "string"
          },
          {
            "in": "formData",
            "required": true,
            "name": "preferredCurrency",
            "type": "string"
          },
          {
            "in": "formData",
            "required": true,
            "name": "location",
            "type": "string"
          },
          {
            "in": "formData",
            "required": true,
            "name": "location",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "profile is updated successfuly",
            "headers": {}
          },
          "400": {
            "description": "token is malformed/invalid",
            "headers": {}
          },
          "401": {
            "description": "profile doesn't belong to user or user is not registered",
            "headers": {}
          }
        }
      }
    },
    "/users/{username}/role": {
      "patch": {
        "description": "A super administrator can assign roles to users by using their email addresses",
        "summary": "Update a User's role",
        "tags": [
          "Role"
        ],
        "operationId": "UpdateRole",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "in": "path",
            "name": "username",
            "type": "string",
            "description": "username of a user whose role is about to be updated"
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "Super administrator is able to change roles of a particular user",
            "schema": {
              "$ref": "#/definitions/roleUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "role is updated successfuly",
            "headers": {}
          },
          "400": {
            "description": "token is malformed/invalid or role field is not valid",
            "headers": {}
          },
          "401": {
            "description": "the requester is not logged in, doesn't have an account or doesn't have Super Administrator privileges",
            "headers": {}
          },
          "404": {
            "description": "user with the provided username doesn't exist",
            "headers": {}
          }
        }
      }
    },
    "/request/{id}/approve": {
      "patch": {
        "tags": [
          "Approve Trip Request"
        ],
        "summary": "Manager can approve a trip request",
        "description": "Manager can approve trip request done by users under his/her authority",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Approve a request: update the status of the trip",
            "required": true,
            "schema": {
              "$ref": "#/definitions/approvalRequest"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "parsing a trip id"
          }
        ],
        "responses": {
          "200": {
            "description": "This trip request was successfully approved"
          },
          "400": {
            "description": "Please provide a authentic request"
          },
          "401": {
            "description": "Please provide a token first"
          },
          "403": {
            "description": "You are not authorized to approve this request"
          }
        }
      }
    },
    "/trip/": {
      "post": {
        "tags": [
          "Trip"
        ],
        "summary": "Trip creation",
        "description": "User can create a trip (One Way Trip, Return Trip and choose Multiple City on a trip)",
        "parameters": [{
            "in": "body",
            "name": "body",
            "description": "data needed to create a trip",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TripCreation"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "token identify that a user has signed in"
          }
        ],
        "responses": {
          "201": {
            "description": "Trip was created successfully."
          },
          "422": {
            "description": "bad data"
          },
          "409": {
            "description": "This trip already exists, use another reasons or date."
          }
        }
      }
    },
    "/trips/{tripId}/comment": {
      "post": {
        "tags": [
          "Trip Comment"
        ],
        "summary": "create a trip comment",
        "description": "User can create a trip comment, endpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "data to pass in body, to create a comment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createComment"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "token identify that a user has signed in"
          },
          {
            "in": "path",
            "name": "tripId",
            "type": "integer",
            "required": true,
            "description": "parsing a Trip ID"
          }
        ],
        "responses": {
          "201": {
            "description": "Comment has been created successfully"
          },
          "400": {
            "description": "comment is required / Sorry, The request contains bad data"
          },
          "403": {
            "description": "Sorry, You are not allowed to comment on This trip."
          },
          "404": {
            "description": "Sorry, This trip does not exist."
          }
        }
      }
    },
    "/comments/{commentId}/update": {
      "patch": {
        "tags": [
          "Trip Comment"
        ],
        "summary": "update a trip comment",
        "description": "User can update a trip comment, endpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "data to pass in body, to update a comment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateComment"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "token identify that a user has signed in"
          },
          {
            "in": "path",
            "name": "commentId",
            "type": "integer",
            "required": true,
            "description": "parsing a Comment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment has been updated successfully."
          },
          "400": {
            "description": "comment is required / Sorry, The request contains bad data"
          },
          "404": {
            "description": "Sorry, The comment not found."
          }
        }
      }
    },
    "/trips/{tripId}/comments": {
      "get": {
        "tags": [
          "Trip Comment"
        ],
        "summary": "get commets",
        "description": "User may get all comments, endpoint",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "token identify that a user has signed in"
          },
          {
            "in": "path",
            "name": "tripId",
            "type": "integer",
            "required": true,
            "description": "parsing a Trip ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip comments has been found successfully"
          },
          "400": {
            "description": "Sorry, the request contains bad data"
          },
          "403": {
            "description": "Sorry, You are not allowed to see the comments of This trip."
          },
          "404": {
            "description": "Sorry, This trip does not exist. / Sorry, This trip does not have any comment."
          }
        }
      }
    },
    "/comments/{commentId}/delete": {
      "delete": {
        "tags": [
          "Trip Comment"
        ],
        "summary": "delete commet",
        "description": "User can delete a comment, endpoint",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "token identify that a user has signed in"
          },
          {
            "in": "path",
            "name": "commentId",
            "type": "integer",
            "required": true,
            "description": "parsing a Comment ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment has been deleted successfully."
          },
          "400": {
            "description": "Sorry, the request contains bad data"
          },
          "404": {
            "description": "Sorry, The comment not found."
          }
        }
      }
    }
  },
  "definitions": {
    "Signup": {
      "type": "object",
      "required": [
        "name",
        "gender",
        "email",
        "username",
        "password",
        "birthdate",
        "preferredLanguage",
        "referredCurrency",
        "location",
        "role",
        "department",
        "lineManager"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "birthdate": {
          "type": "date"
        },
        "preferredLanguage": {
          "type": "string"
        },
        "preferredCurrency": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "lineManager": {
          "type": "string"
        }
      }
    },
    "signin": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "SendEmail": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "ResetPassword": {
      "type": "object",
      "required": [
        "password",
        "confirmPassword"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      }
    },
    "profileUpdate": {
      "title": "Profile Update Request",
      "example": {
        "name": "edited username",
        "birthdate": "2000-02-02",
        "gender": "male",
        "preferredLanguage": "English",
        "preferredCurrency": "USD",
        "location": "Kigali Rwanda"
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "birthdate": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "preferredLanguage": {
          "type": "string"
        },
        "preferredCurrency": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "birthdate",
        "gender",
        "preferredLanguage",
        "preferredCurrency",
        "location"
      ]
    },
    "roleUpdate": {
      "title": "User role update request",
      "example": {
        "role": "Travel Administrator"
      },
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        }
      },
      "required": [
        "role"
      ]
    },
    "approvalRequest": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "TripCreation": {
      "title": "create a trip",
      "type": "object",
      "required": [
        "tripType",
        "from",
        "to",
        "date",
        "reasons",
        "accommodationId"
      ],
      "properties": {
        "tripType": {
          "type": "string"
        },
        "from": {
          "type": "integer"
        },
        "to": {
          "type": "integer"
        },
        "date": {
          "type": "date"
        },
        "reasons": {
          "type": "string"
        },
        "returnDate": {
          "type": "date"
        },
        "accommodationId": {
          "type": "integer"
        }
      },
      "example": {
        "tripType": "Return",
        "from": 1,
        "to": [2,1],
        "date": "2020-02-20",
        "reasons": "my reason of this trip",
        "returnDate": "2020-02-23",
        "accommodationId": 1
      }
    },
    "createComment": {
      "type": "object",
      "required": [
        "comment"
      ],
      "properties": {
        "comment": {
          "type": "string"
        }
      }
    },
    "updateComment": {
      "type": "object",
      "required": [
        "comment"
      ],
      "properties": {
        "comment": {
          "type": "string"
        }
      }
    }
  }
}